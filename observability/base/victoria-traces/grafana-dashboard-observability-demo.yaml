apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaDashboard
metadata:
  name: observability-demo-correlation
  namespace: observability
spec:
  allowCrossNamespaceImport: true
  folderRef: "traces"
  instanceSelector:
    matchLabels:
      dashboards: "grafana"
  json: |
    {
      "title": "Observability Demo - Metrics to Traces Correlation",
      "description": "RED metrics with trace correlation for xplane-image-gallery",
      "tags": ["observability", "traces", "metrics", "demo"],
      "timezone": "browser",
      "editable": true,
      "graphTooltip": 1,
      "time": {
        "from": "now-30m",
        "to": "now"
      },
      "templating": {
        "list": [
          {
            "name": "datasource",
            "type": "datasource",
            "query": "prometheus",
            "current": {
              "selected": false,
              "text": "VictoriaMetrics",
              "value": "VictoriaMetrics"
            },
            "hide": 0,
            "includeAll": false,
            "multi": false,
            "options": [],
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "type": "datasource"
          },
          {
            "name": "namespace",
            "type": "constant",
            "query": "apps",
            "current": {
              "text": "apps",
              "value": "apps"
            },
            "hide": 2
          },
          {
            "name": "service",
            "type": "constant",
            "query": "xplane-image-gallery",
            "current": {
              "selected": true,
              "text": "xplane-image-gallery",
              "value": "xplane-image-gallery"
            },
            "hide": 0,
            "includeAll": false,
            "multi": false,
            "name": "service",
            "options": [
              {
                "selected": true,
                "text": "xplane-image-gallery",
                "value": "xplane-image-gallery"
              }
            ],
            "skipUrlSync": false,
            "type": "constant"
          }
        ]
      },
      "panels": [
        {
          "type": "row",
          "title": "📊 METRICS: Service Health",
          "gridPos": {"x": 0, "y": 0, "w": 24, "h": 1},
          "collapsed": false
        },
        {
          "type": "timeseries",
          "title": "HTTP Request Rate (requests/sec)",
          "gridPos": {"x": 0, "y": 1, "w": 8, "h": 8},
          "datasource": {"type": "prometheus", "uid": "${datasource}"},
          "targets": [
            {
              "expr": "sum(rate(http.server.request.count{service.name=\"$service\"}[1m]))",
              "legendFormat": "Total requests/sec",
              "refId": "A",
              "exemplar": true
            },
            {
              "expr": "sum by (http.response.status_code) (rate(http.server.request.count{service.name=\"$service\"}[1m]))",
              "legendFormat": "{{http.response.status_code}}",
              "refId": "B",
              "exemplar": true
            }
          ],
          "fieldConfig": {
            "defaults": {
              "color": {"mode": "palette-classic"},
              "custom": {
                "axisCenteredZero": false,
                "axisLabel": "requests/sec",
                "drawStyle": "line",
                "fillOpacity": 10,
                "lineWidth": 2,
                "showPoints": "auto"
              },
              "unit": "reqps"
            }
          },
          "options": {
            "tooltip": {"mode": "multi"},
            "legend": {"displayMode": "list", "placement": "bottom"}
          }
        },
        {
          "type": "stat",
          "title": "Error Rate %",
          "gridPos": {"x": 8, "y": 1, "w": 4, "h": 4},
          "datasource": {"type": "prometheus", "uid": "${datasource}"},
          "targets": [
            {
              "expr": "sum(rate(http.server.request.count{service.name=\"$service\",http.response.status_code=~\"5..\"}[1m])) / sum(rate(http.server.request.count{service.name=\"$service\"}[1m])) * 100",
              "refId": "A"
            }
          ],
          "fieldConfig": {
            "defaults": {
              "color": {"mode": "thresholds"},
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {"color": "green", "value": null},
                  {"color": "yellow", "value": 1},
                  {"color": "orange", "value": 5},
                  {"color": "red", "value": 10}
                ]
              },
              "unit": "percent",
              "decimals": 2
            }
          },
          "options": {
            "colorMode": "background",
            "graphMode": "area",
            "textMode": "value_and_name"
          }
        },
        {
          "type": "stat",
          "title": "Request Rate",
          "gridPos": {"x": 12, "y": 1, "w": 4, "h": 4},
          "datasource": {"type": "prometheus", "uid": "${datasource}"},
          "targets": [
            {
              "expr": "sum(rate(http.server.request.count{service.name=\"$service\"}[1m]))",
              "refId": "A"
            }
          ],
          "fieldConfig": {
            "defaults": {
              "color": {"mode": "palette-classic"},
              "unit": "reqps",
              "decimals": 1
            }
          },
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "textMode": "value_and_name"
          }
        },
        {
          "type": "timeseries",
          "title": "Response Time (P95 latency)",
          "gridPos": {"x": 16, "y": 1, "w": 8, "h": 8},
          "datasource": {"type": "prometheus", "uid": "${datasource}"},
          "targets": [
            {
              "expr": "histogram_quantile(0.95, sum(rate(http.server.request.duration_bucket{service.name=\"$service\"}[1m])) by (le, http.route))",
              "legendFormat": "P95 - {{http.route}}",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(0.50, sum(rate(http.server.request.duration_bucket{service.name=\"$service\"}[1m])) by (le))",
              "legendFormat": "P50 (median)",
              "refId": "B"
            }
          ],
          "fieldConfig": {
            "defaults": {
              "color": {"mode": "palette-classic"},
              "custom": {
                "axisCenteredZero": false,
                "axisLabel": "seconds",
                "drawStyle": "line",
                "fillOpacity": 10,
                "lineWidth": 2
              },
              "unit": "s"
            }
          },
          "options": {
            "tooltip": {"mode": "multi"},
            "legend": {"displayMode": "list", "placement": "bottom"}
          }
        },
        {
          "type": "stat",
          "title": "P95 Latency",
          "gridPos": {"x": 8, "y": 5, "w": 4, "h": 4},
          "datasource": {"type": "prometheus", "uid": "${datasource}"},
          "targets": [
            {
              "expr": "histogram_quantile(0.95, sum(rate(http.server.request.duration_bucket{service.name=\"$service\"}[1m])) by (le))",
              "refId": "A"
            }
          ],
          "fieldConfig": {
            "defaults": {
              "color": {"mode": "thresholds"},
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {"color": "green", "value": null},
                  {"color": "yellow", "value": 0.5},
                  {"color": "orange", "value": 1},
                  {"color": "red", "value": 5}
                ]
              },
              "unit": "s",
              "decimals": 3
            }
          },
          "options": {
            "colorMode": "background",
            "graphMode": "area",
            "textMode": "value_and_name"
          }
        },
        {
          "type": "stat",
          "title": "Total 5xx Errors",
          "gridPos": {"x": 12, "y": 5, "w": 4, "h": 4},
          "datasource": {"type": "prometheus", "uid": "${datasource}"},
          "targets": [
            {
              "expr": "sum(increase(http.server.request.count{service.name=\"$service\",http.response.status_code=~\"5..\"}[5m]))",
              "refId": "A"
            }
          ],
          "fieldConfig": {
            "defaults": {
              "color": {"mode": "thresholds"},
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {"color": "green", "value": null},
                  {"color": "red", "value": 1}
                ]
              },
              "unit": "short",
              "decimals": 0
            }
          },
          "options": {
            "colorMode": "background",
            "graphMode": "none",
            "textMode": "value_and_name"
          }
        },
        {
          "type": "timeseries",
          "title": "Request Count by Status Code",
          "gridPos": {"x": 0, "y": 9, "w": 24, "h": 6},
          "datasource": {"type": "prometheus", "uid": "${datasource}"},
          "targets": [
            {
              "expr": "sum by (http.response.status_code) (rate(http.server.request.count{service.name=\"$service\"}[1m]))",
              "legendFormat": "HTTP {{http.response.status_code}}",
              "refId": "A",
              "exemplar": true
            }
          ],
          "fieldConfig": {
            "defaults": {
              "color": {"mode": "palette-classic"},
              "custom": {
                "drawStyle": "line",
                "fillOpacity": 20,
                "lineWidth": 2,
                "stacking": {"mode": "normal"}
              },
              "unit": "reqps"
            },
            "overrides": [
              {
                "matcher": {"id": "byRegexp", "options": ".*5.*"},
                "properties": [
                  {"id": "color", "value": {"mode": "fixed", "fixedColor": "red"}}
                ]
              },
              {
                "matcher": {"id": "byRegexp", "options": ".*200.*"},
                "properties": [
                  {"id": "color", "value": {"mode": "fixed", "fixedColor": "green"}}
                ]
              }
            ]
          },
          "options": {
            "tooltip": {"mode": "multi"},
            "legend": {"displayMode": "list", "placement": "bottom"}
          }
        },
        {
          "type": "row",
          "title": "📋 LOGS: Detailed Context",
          "gridPos": {"x": 0, "y": 15, "w": 24, "h": 1},
          "collapsed": false
        },
        {
          "type": "logs",
          "title": "Recent Error Logs",
          "gridPos": {"x": 0, "y": 16, "w": 24, "h": 8},
          "datasource": {"type": "victoriametrics-logs-datasource", "uid": "VictoriaLogs"},
          "targets": [
            {
              "expr": "{kubernetes.container_name=\"$service\"} | unpack_json | level:\"error\"",
              "refId": "A"
            }
          ],
          "options": {
            "showTime": true,
            "showLabels": false,
            "showCommonLabels": false,
            "wrapLogMessage": true,
            "prettifyLogMessage": false,
            "enableLogDetails": true,
            "dedupStrategy": "none",
            "sortOrder": "Descending"
          }
        },
        {
          "type": "row",
          "title": "🌐 SERVICE GRAPH: Dependencies",
          "gridPos": {"x": 0, "y": 25, "w": 24, "h": 1},
          "collapsed": false
        },
        {
          "type": "text",
          "title": "Service Dependencies",
          "gridPos": {"x": 0, "y": 26, "w": 24, "h": 4},
          "options": {
            "mode": "markdown",
            "content": "## 🔗 Service Dependencies\n\n```\n┌─────────────────┐\n│  Load Balancer  │\n└────────┬────────┘\n         │\n         ▼\n┌───────────────────────┐\n│  xplane-image-gallery │\n└──────┬───────┬────────┘\n       │       │\n       │       └──────────────┐\n       │                      │\n       ▼                      ▼\n┌─────────────┐        ┌──────────┐\n│  PostgreSQL │        │  Valkey  │\n│  (CloudNativePG)     │  (Redis) │\n└─────────────┘        └──────────┘\n       │\n       ▼\n┌─────────────┐\n│  S3 Bucket  │\n│  (AWS)      │\n└─────────────┘\n```\n\n**Error Flow Analysis:**\n1. When PostgreSQL connection fails → HTTP 500 errors\n2. Check traces for database spans with high duration\n3. Check logs for \"dial tcp\" timeout errors\n4. Verify network policies allow egress to database"
          }
        }
      ]
    }
