---
apiVersion: pkg.crossplane.io/v1
kind: Provider
metadata:
  name: provider-kubernetes
spec:
  package: xpkg.upbound.io/upbound/provider-kubernetes:v0
  runtimeConfigRef:
    name: provider-kubernetes
---
apiVersion: pkg.crossplane.io/v1beta1
kind: DeploymentRuntimeConfig
metadata:
  name: provider-kubernetes
spec:
  serviceAccountTemplate:
    metadata:
      name: crossplane-provider-kubernetes
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: crossplane-provider-kubernetes
  namespace: crossplane-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: crossplane-system
  name: crossplane-kubernetes
rules:
  # Create the RDS service
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["get", "create", "delete", "update", "patch"]
  # Create the PostgreSQL provider config for the RDS service
  - apiGroups: ["postgresql.sql.crossplane.io"]
    resources: ["providerconfigs"]
    verbs: ["get", "create", "delete", "update", "patch"]
  - apiGroups: ["rds.aws.upbound.io"]
    resources: ["instances"]
    verbs: ["get"]
  #  Manage CNPG PostgreSQL databases, clusters, roles, and scheduled backups
  - apiGroups: ["postgresql.cnpg.io"]
    resources: ["databases", "clusters", "roles", "scheduledbackups"]
    verbs: ["get", "create", "delete", "update", "patch"]
  # Manage external secrets
  - apiGroups: ["external-secrets.io"]
    resources: ["externalsecrets"]
    verbs: ["get", "create", "delete", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: crossplane-kubernetes-services
  namespace: crossplane-system
subjects:
  - kind: ServiceAccount
    name: crossplane-provider-kubernetes
    namespace: crossplane-system
roleRef:
  kind: ClusterRole
  name: crossplane-kubernetes
  apiGroup: rbac.authorization.k8s.io
