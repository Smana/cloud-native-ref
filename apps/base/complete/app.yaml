# source: https://github.com/Smana/image-gallery.git
---
apiVersion: cloud.ogenki.io/v1alpha1
kind: App
metadata:
  name: xplane-image-gallery
  namespace: apps
spec:
  image:
    repository: ghcr.io/smana/image-gallery
    tag: "1.5.2"
    pullPolicy: IfNotPresent
  replicas: 2
  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "200m"
      memory: "256Mi"
  onDemand: false
  runAsNonRoot: true
  spreadAcrossZones: true
  antiAffinityPreset: soft
  automountServiceAccountToken: false
  securityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    capabilities:
      drop: ["ALL"]
    enableWritableTmp: true

  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 70

  pdb:
    enabled: true
    minAvailable: 1
    unhealthyPodEvictionPolicy: AlwaysAllow

  service:
    port: 8080

  # Application configuration
  env:
    # Application settings
    - name: GO_ENV
      value: "production"
    - name: PORT
      value: "8080"
    - name: LOG_LEVEL
      value: "info"
    - name: LOG_FORMAT
      value: "json"

    # Database connection (from CNPG secret)
    - name: DATABASE_URL
      valueFrom:
        secretKeyRef:
          name: xplane-image-gallery-cnpg-image-gallery
          key: uri

    # S3 Storage configuration
    - name: STORAGE_ENDPOINT
      value: "s3.eu-west-3.amazonaws.com"
    - name: STORAGE_BUCKET
      value: "eu-west-3-ogenki-xplane-image-gallery"
    - name: STORAGE_REGION
      value: "eu-west-3"
    - name: STORAGE_USE_SSL
      value: "true"

    # Cache configuration (Valkey from kvStore)
    - name: CACHE_ENABLED
      value: "true"
    - name: CACHE_ADDRESS
      value: "xplane-image-gallery-valkey-primary:6379"
    - name: CACHE_PASSWORD
      value: ""

  # Observability configuration
  observability:
    traces:
      enabled: true
    metrics:
      enabled: true
    alertingRules:
      groups:
        - name: http_errors
          interval: 30s
          rules:
            # Alert on high HTTP 5xx error rate
            - alert: HighHTTPErrorRate
              expr: |
                sum(rate(http.server.request.count{service.name="xplane-image-gallery",http.response.status_code=~"5.."}[5m]))
                /
                sum(rate(http.server.request.count{service.name="xplane-image-gallery"}[5m]))
                > 0.05
              for: 2m
              labels:
                severity: warning
                service: image-gallery
              annotations:
                summary: "High HTTP 5xx error rate on image-gallery"
                description: |
                  HTTP 5xx error rate is {{ $value | humanizePercentage }} on image-gallery.
                  This indicates server-side errors are affecting more than 5% of requests.

            # Alert on high HTTP latency
            - alert: HighHTTPLatency
              expr: |
                histogram_quantile(0.95,
                  sum(rate(http.server.request.duration_bucket{service.name="xplane-image-gallery"}[5m])) by (vmrange, http.route)
                ) > 1.0
              for: 5m
              labels:
                severity: warning
                service: image-gallery
              annotations:
                summary: "High HTTP latency on route {{ $labels.http_route }}"
                description: |
                  95th percentile latency is {{ $value }}s on route {{ $labels.http_route }}.
                  Expected latency is below 1 second.

        - name: image_uploads
          interval: 30s
          rules:
            # Alert on failed image uploads
            - alert: HighImageUploadFailureRate
              expr: |
                sum(rate(image_uploads_total{service.name="xplane-image-gallery",status="error"}[5m]))
                /
                sum(rate(image_uploads_total{service.name="xplane-image-gallery"}[5m]))
                > 0.1
              for: 3m
              labels:
                severity: critical
                service: image-gallery
                category: business
              annotations:
                summary: "High image upload failure rate"
                description: |
                  {{ $value | humanizePercentage }} of image uploads are failing.
                  Check storage connectivity and permissions.

            # Recording rule for cache hit rate
            - record: image_gallery:cache_hit_rate:5m
              expr: |
                sum(rate(image_cache_hits{service.name="xplane-image-gallery"}[5m]))
                /
                (sum(rate(image_cache_hits{service.name="xplane-image-gallery"}[5m]))
                 + sum(rate(image_cache_misses{service.name="xplane-image-gallery"}[5m])))

  # Optional: Additional secrets from AWS Secrets Manager
  # Currently only needed for non-infrastructure config (optional overrides)
  externalSecrets:
    - name: image-gallery-app-config
      remoteRef: apps/image-gallery/config
  envFrom:
    - secretRef:
        name: image-gallery-app-config
        optional: true

  # Default: private gateway (image-gallery.priv.cloud.ogenki.io)
  route:
    enabled: true
    hostname: "image-gallery"

  networkPolicies:
    enabled: false
    ingress:
      # Allow all ingress controller traffic
      - fromEntities:
          - ingress
        toPorts:
          - ports:
              - port: "8080"
                protocol: TCP
    egress:
      # DNS resolution
      - toEndpoints:
          - matchLabels:
              "io.kubernetes.pod.namespace": "kube-system"
              "k8s-app": "kube-dns"
        toPorts:
          - ports:
              - port: "53"
                protocol: UDP
              - port: "53"
                protocol: TCP

      # Database access
      - toEndpoints:
          - matchLabels:
              "cnpg.io/cluster": "xplane-image-gallery-cnpg-cluster"
        toPorts:
          - ports:
              - port: "5432"
                protocol: TCP

      # Valkey cache access
      - toEndpoints:
          - matchLabels:
              "app.kubernetes.io/instance": "xplane-image-gallery-valkey"
              "app.kubernetes.io/name": "valkey"
        toPorts:
          - ports:
              - port: "6379"
                protocol: TCP

      # EKS Pod Identity agent (runs on host network)
      - toEntities:
          - host
        toPorts:
          - ports:
              - port: "80"
                protocol: TCP

      # Observability services (VictoriaMetrics and VictoriaTraces)
      - toEndpoints:
          - matchLabels:
              "io.kubernetes.pod.namespace": "observability"
              "app.kubernetes.io/name": "vmsingle"
        toPorts:
          - ports:
              - port: "8428"
                protocol: TCP
      - toEndpoints:
          - matchLabels:
              "io.kubernetes.pod.namespace": "observability"
              "app.kubernetes.io/name": "vt-single"
        toPorts:
          - ports:
              - port: "10428"
                protocol: TCP

      # HTTP/HTTPS egress (covers S3 and external services)
      - toEntities:
          - world
        toPorts:
          - ports:
              - port: "80"
                protocol: TCP
              - port: "443"
                protocol: TCP

  # Where the images are pulled from
  s3Bucket:
    enabled: true
    region: ${region}
    permissions: readwrite
    versioning: true
    retentionDays: 90

  # For caching
  kvStore:
    enabled: true
    size: small
    type: valkey

  sqlInstance:
    enabled: true
    size: small
    storageSize: 20Gi
    instances: 2
    primaryUpdateStrategy: unsupervised
    createSuperuser: false
    roles:
      - name: image-gallery-app
        comment: "Application user for image-gallery"
        superuser: false
        inRoles:
          - pg_monitor
    databases:
      - name: image-gallery
        owner: image-gallery-app
    atlasSchema:
      url: "https://github.com/Smana/image-gallery.git"
      ref: "v1.3.0"
      path: "internal/platform/database/migrations"

    backup:
      schedule: "0 2 * * *"
      bucketName: "${region}-ogenki-cnpg-backups"
      retentionPolicy: "30d"
