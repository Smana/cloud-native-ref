name: OpenTofu Deployment

on:
  push:
    branches:
      - main
    paths:
      - "opentofu/**"
      - ".github/workflows/terramate-deploy.yaml"

jobs:
  deploy:
    name: Deploy OpenTofu changes in changed Terramate stacks

    permissions:
      id-token: write
      contents: read
      pull-requests: read
      checks: read

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Install Terramate
        uses: terramate-io/terramate-action@v2

      - name: Install OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: 1.9.0
          tofu_wrapper: false

      - name: List changed stacks
        id: list
        run: terramate list --changed

      # We should assume an IAMÂ role for production cases
      - name: Configure AWS credentials
        if: steps.list.outputs.stdout
        id: auth
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-3

      - name: Run OpenTofu init on changed stacks
        if: steps.list.outputs.stdout
        id: init
        run: |
          terramate run \
            --parallel 1 \
            --changed \
            -- \
            tofu init

      - name: Create OpenTofu plan on changed stacks
        if: steps.list.outputs.stdout
        id: plan
        run: |
          terramate run \
            --parallel 5 \
            --changed \
            -- \
            tofu plan -lock-timeout=5m -out out.otplan

      - name: Apply planned changes on changed stacks
        if: steps.list.outputs.stdout
        id: apply
        run: |
          terramate run \
            --parallel 5 \
            --changed \
            --sync-deployment \
            --tofu-plan-file=out.otplan \
            -- \
            tofu apply -input=false -auto-approve -lock-timeout=5m out.otplan
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Run drift detection
        if: steps.list.outputs.stdout && ! cancelled() && steps.apply.outcome != 'skipped'
        id: drift
        run: |
          terramate run \
            --parallel 5 \
            --changed \
            --continue-on-error \
            --sync-drift-status \
            --tofu-plan-file=drift.otplan \
            -- \
            tofu plan -out drift.otplan -detailed-exitcode
        env:
          GITHUB_TOKEN: ${{ github.token }}
