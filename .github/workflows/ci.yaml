name: CI

on:
  pull_request:
  push:
    branches: ["main"]

jobs:
  pre-commit:
    name: Pre-commit checks ðŸ›ƒ
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Write required openbao files
        run: |
          mkdir -p opentofu/openbao/cluster/.tls
          echo 'keep' > opentofu/openbao/cluster/.tls/openbao.pem
          echo 'keep' > opentofu/openbao/cluster/.tls/openbao-key.pem
          echo 'keep' > opentofu/openbao/cluster/.tls/ca-chain.pem

      - name: Validate Opentofu configuration
        uses: dagger/dagger-for-github@v7
        with:
          version: "latest"
          verb: call
          module: github.com/Smana/daggerverse/pre-commit-tf@pre-commit-tf/v0.1.1
          args: run --dir "." --tf-binary="tofu"

  kubernetes-validation:
    name: Kubernetes validation â˜¸
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Flux clusters manifests
        uses: dagger/dagger-for-github@v7
        with:
          version: "latest"
          verb: call
          module: github.com/Smana/daggerverse/kubeconform@kubeconform/v0.1.3
          args: validate --manifests "./clusters" --exclude ".github/*,opentofu/*" --catalog

      - name: Validate Kubernetes manifests (Kustomize directories)
        uses: dagger/dagger-for-github@v7
        with:
          version: "latest"
          verb: call
          module: github.com/Smana/daggerverse/kubeconform@kubeconform/v0.1.3
          args: validate --manifests "." --exclude ".github/*,opentofu/*" --env "domain_name:cluster.local,cluster_name:foobar,region:eu-west-3" --kustomize --flux --catalog

  shellcheck:
    name: Check the shell scripts ðŸ’»
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master
        with:
          # Optional: specify severity level (style, info, warning, error)
          # severity: warning
          check_paths: "./scripts"
        env:
          # Optional: If you want ShellCheck to follow sourced files
          SHELLCHECK_OPTS: -x
