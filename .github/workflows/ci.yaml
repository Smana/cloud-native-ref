name: CI

on:
  pull_request:
    branches: ["main"]

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  pre-commit:
    name: Pre-commit checks ðŸ›ƒ
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Write required openbao files
        run: |
          mkdir -p opentofu/openbao/cluster/.tls
          echo 'keep' > opentofu/openbao/cluster/.tls/openbao.pem
          echo 'keep' > opentofu/openbao/cluster/.tls/openbao-key.pem
          echo 'keep' > opentofu/openbao/cluster/.tls/ca-chain.pem

      - name: Validate Opentofu configuration
        uses: dagger/dagger-for-github@v7
        with:
          version: "latest"
          verb: call
          module: github.com/Smana/daggerverse/pre-commit-tf@pre-commit-tf/v0.1.2
          args: run --dir "." --tf-binary="tofu"

  security-scan:
    name: Security scanning ðŸ”’
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security
        uses: github/codeql-action/upload-sarif@v4
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Run Checkov static analysis
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          quiet: true
          soft_fail: true
          framework: terraform,kubernetes,secrets
          output_format: sarif
          output_file_path: checkov-results.sarif

      - name: Upload Checkov scan results
        uses: github/codeql-action/upload-sarif@v4
        if: always()
        with:
          sarif_file: checkov-results.sarif

      - name: Detect secrets with TruffleHog
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified

  kubernetes-validation:
    name: Kubernetes validation â˜¸
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Validate Flux clusters manifests
        uses: dagger/dagger-for-github@v7
        with:
          version: "latest"
          verb: call
          module: github.com/Smana/daggerverse/kubeconform@kubeconform/v0.1.3
          args: validate --manifests "./clusters" --exclude ".github/*,opentofu/*" --catalog

      - name: Validate Kubernetes manifests (Kustomize directories)
        uses: dagger/dagger-for-github@v7
        with:
          version: "latest"
          verb: call
          module: github.com/Smana/daggerverse/kubeconform@kubeconform/v0.1.3
          args: validate --manifests "." --exclude ".github/*,opentofu/*" --env "domain_name:cluster.local,cluster_name:foobar,region:eu-west-3,cert_manager_approle_id:random" --kustomize --flux --catalog

      - name: Run Polaris configuration validation
        uses: fairwindsops/polaris/.github/actions/setup-polaris@master
        with:
          version: '8.5.0'

      - name: Validate Kubernetes best practices
        run: |
          find . -name "*.yaml" -o -name "*.yml" | grep -E "(infrastructure|security|observability|tooling|namespaces|crds)/" | head -20 | \
          while read file; do
            echo "Validating $file"
            polaris validate --config .polaris.yaml --resource "$file" || true
          done

  shellcheck:
    name: Check the shell scripts ðŸ’»
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master
        with:
          severity: warning
          scandir: "./scripts"
        env:
          SHELLCHECK_OPTS: -x
