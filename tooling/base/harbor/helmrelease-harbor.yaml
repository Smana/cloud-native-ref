apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: harbor
spec:
  releaseName: harbor
  driftDetection:
    mode: enabled
  chart:
    spec:
      chart: harbor
      sourceRef:
        kind: HelmRepository
        name: harbor
      version: "1.15.1"
  interval: 10m0s
  install:
    remediation:
      retries: 3
  values:
    fullnameOverride: "harbor"
    expose:
      type: clusterIP
      tls:
        auto:
          commonName: "ogenki"

    externalURL: https://harbor.priv.${domain_name}

    persistence:
      enabled: true
      imageChartStorage:
        # An issue prevents from using EKS Pod Identity: https://github.com/goharbor/harbor/pull/18686
        # Currently this is not possible to push to S3 bucket
        type: s3
        s3:
          region: ${region}
          bucket: ${region}-ogenki-harbor

    existingSecretAdminPassword: harbor-admin-password
    existingSecretAdminPasswordKey: password

    registry:
      serviceAccountName: harbor
      registry:
        # See the iam-user.yaml file for the creation of the user and the policy
        extraEnvVars:
          - name: REGISTRY_STORAGE_S3_ACCESSKEY
            valueFrom:
              secretKeyRef:
                name: xplane-harbor-access-key
                key: username
          - name: REGISTRY_STORAGE_S3_SECRETKEY
            valueFrom:
              secretKeyRef:
                name: xplane-harbor-access-key
                key: password

    portal:
      resources:
        limits:
          memory: 300Mi
        requests:
          cpu: 300m
          memory: 300Mi

    database:
      type: external
      external:
        host: "xplane-harbor-cnpg-cluster-rw"
        port: "5432"
        username: "harbor"
        coreDatabase: "registry"
        existingSecret: "xplane-harbor-cnpg-role-harbor"
        sslmode: "require"

    redis:
      type: external
      external:
        addr: "harbor-valkey-primary:6379"
        username: "user"
        existingSecret: "harbor-valkey-password"

    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        additionalLabels:
          prometheus-instance: main

    cache:
      enabled: true
      expireHours: 24
