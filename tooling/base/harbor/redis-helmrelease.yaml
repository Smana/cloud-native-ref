apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: harbor-redis
  namespace: tooling
spec:
  releaseName: harbor-redis
  chart:
    spec:
      chart: redis
      sourceRef:
        kind: HelmRepository
        name: bitnami
        namespace: flux-system
      version: "20.0.1"
  interval: 10m0s
  install:
    remediation:
      retries: 3
  values:
    fullnameOverride: "harbor-redis"

    auth:
      existingSecret: "harbor-redis-password"
      existingSecretPasswordKey: "REDIS_PASSWORD"

    master:
      resources:
        limits:
          memory: 200Mi
        requests:
          cpu: 100m
          memory: 200Mi

    replica:
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 250m
          memory: 256Mi

    pdb:
      create: true
      minAvailable: 1

    # Todo TLS

    metrics:
      enabled: true
      resources:
        limits: {}
        requests: {}

      serviceMonitor:
        enabled: true
        additionalLabels:
          prometheus-instance: main

      prometheusRule:
        enabled: false
        ## @param metrics.prometheusRule.namespace The namespace in which the prometheusRule will be created
        ##
        namespace: ""
        ## @param metrics.prometheusRule.additionalLabels Additional labels for the prometheusRule
        ##
        additionalLabels: {}
        ## @param metrics.prometheusRule.rules Custom Prometheus rules
        ## e.g:
        ## rules:
        ##   - alert: RedisDown
        ##     expr: redis_up{service="{{ template "common.names.fullname" . }}-metrics"} == 0
        ##     for: 2m
        ##     labels:
        ##       severity: error
        ##     annotations:
        ##       summary: Redis&reg; instance {{ "{{ $labels.instance }}" }} down
        ##       description: Redis&reg; instance {{ "{{ $labels.instance }}" }} is down
        ##    - alert: RedisMemoryHigh
        ##      expr: >
        ##        redis_memory_used_bytes{service="{{ template "common.names.fullname" . }}-metrics"} * 100
        ##        /
        ##        redis_memory_max_bytes{service="{{ template "common.names.fullname" . }}-metrics"}
        ##        > 90
        ##      for: 2m
        ##      labels:
        ##        severity: error
        ##      annotations:
        ##        summary: Redis&reg; instance {{ "{{ $labels.instance }}" }} is using too much memory
        ##        description: |
        ##          Redis&reg; instance {{ "{{ $labels.instance }}" }} is using {{ "{{ $value }}" }}% of its available memory.
        ##    - alert: RedisKeyEviction
        ##      expr: |
        ##        increase(redis_evicted_keys_total{service="{{ template "common.names.fullname" . }}-metrics"}[5m]) > 0
        ##      for: 1s
        ##      labels:
        ##        severity: error
        ##      annotations:
        ##        summary: Redis&reg; instance {{ "{{ $labels.instance }}" }} has evicted keys
        ##        description: |
        ##          Redis&reg; instance {{ "{{ $labels.instance }}" }} has evicted {{ "{{ $value }}" }} keys in the last 5 minutes.
        ##
        rules: []

    useExternalDNS:
      enabled: true
      suffix: "priv.${domain_name}"
      additionalAnnotations:
        ttl: 10
